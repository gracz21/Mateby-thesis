#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass dcsbook
\options thesis
\use_default_options true
\begin_modules
dcs
\end_modules
\maintain_unincluded_children false
\language polish
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement tbph
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks true
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "urlcolor=linkcolor,linkcolor=black,citecolor=linkcolor"
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language polish
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Author
Maciej Kozłowski
\begin_inset Newline newline
\end_inset

Szymon Soppa
\begin_inset Newline newline
\end_inset

Kamil Walkowiak
\end_layout

\begin_layout Title
System wspomagający organizację i wyszukiwanie wydarzeń wśród różnorodnych
 społeczności
\end_layout

\begin_layout Date
Poznań, 2016
\end_layout

\begin_layout Supervisor
dr inż.
 Krzysztof Jankiewicz
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frontmatter
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
mainmatter
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Wprowadzenie
\end_layout

\begin_layout Section
Motywacja
\end_layout

\begin_layout Standard
Rosnąca liczba użytkowników internetu jest główną przyczyną niezwykle dynamiczne
go rozwoju zarówno aplikacji internetowych jak i mobilnych.
 Dostęp do internetu obecnie jest możliwy w prawie każdym miejscu na ziemi.
 Implikuje to szczególne zainteresowanie urządzeniami przenośnymi będącymi
 obecnie najatrakcyjniejszą formą komunikacji internetowej.
 W celu ułatwienia i ujednolicenia procesu powstawania aplikacji internetowych
 opracowano wiele platform programistycznych, które w ogólności odpowiedzialne
 są za:
\end_layout

\begin_layout Itemize
mechanizmy funkcjonujące po stronie serwera, których zadaniem jest komunikacja
 z bazą danych oraz przetwarzanie zadań
\end_layout

\begin_layout Itemize
interfejs użytkownika, którego zadaniem jest przyjmowanie danych od użytkownika,
 komunikacja z serwerem oraz prezentacja danych
\end_layout

\begin_layout Standard
Tematyka istniejących aplikacji internetowych jest bardzo obszerna.
 Jednym z najważniejszych trendów są serwisy społecznościowe.
 Głównym powodem ich popularności jest możliwość nawiązania znajomości z
 ludźmi nie rzadko oddalonymi o tysiące kilometrów.
 Bazują one zatem na relacjach międzyludzkich.
 Cechami charakterystycznymi serwisów społecznościowych jest między innymi
 wsparcie dla tworzenia kręgu znajomych, formowania lokalnych społeczności
 oraz organizacji wydarzeń.
 Ogromne znaczenie w dzisiejszych czasach mają serwisy służące do organizacji
 wydarzeń, które zachęcają do spędzenia czasu poza domem oraz budują rzeczywiste
 relacje międzyludzkie.
 Tego typu aplikacji jest obecnie wiele lecz brakuje im kilku istotnych
 funkcjonalności takich jak:
\end_layout

\begin_layout Itemize
elastyczne wyszukiwanie
\end_layout

\begin_layout Itemize
integracja z innymi serwisami społecznościowymi
\end_layout

\begin_layout Itemize
łatwe zarządzanie oddziałami firm tworzących wydarzenia oraz przeglądania
 zbiorczych statystyk
\end_layout

\begin_layout Standard
Istnieje zatem potrzeba stworzenia czegoś nowego pozbawionego wyżej wymienionych
 wad.
\end_layout

\begin_layout Section
Cel i zakres pracy
\end_layout

\begin_layout Section
Struktura pracy
\end_layout

\begin_layout Standard
Struktura pracy jest następująca.
 Rozdział
\begin_inset space ~
\end_inset

2.
 zawiera przegląd istniejących aplikacji o podobnej tematyce.
 Opisano w nim wady i zalety poszczególnych rozwiązań.
 W
\begin_inset space ~
\end_inset

rozdziale
\begin_inset space ~
\end_inset

3.
 dokonano przeglądu dostępnych technologii, które mogą zostać użyte w procesie
 implementacji aplikacji.
 Przyjrzano się rozwiązaniom umożliwiającym realizację bazy danych oraz
 platformom programistycznym wspomagającym implementację zarówno logiki
 serwera, jak i aplikacji internetowej oraz mobilnej.
 Na
\begin_inset space ~
\end_inset

koniec uzasadniony został wybór zastosowanych technologii.
 W
\begin_inset space ~
\end_inset

rozdziale
\begin_inset space ~
\end_inset

4.
 przedstawiono wykorzystane narzędzia inżynierii oprogramowania.
 Opisano użyty system kontroli wersji, narzędzie wspomagające pracę w metodykach
 zwinnych, system ciągłej integracji oraz komunikator ułatwiający komunikację
 wewnątrz zespołową.
 Na
\begin_inset space ~
\end_inset

koniec omówiono wykorzystany serwer produkcyjny.
 W
\begin_inset space ~
\end_inset

rozdziale
\begin_inset space ~
\end_inset

5.
 omówiono projekt aplikacji.
 Opisano wymagania funkcjonalne, które powinna spełniać tworzona aplikacja
 oraz przedstawiono projekt interfejsu aplikacji.
 Przedstawiono bazę danych zaprojektowaną na potrzeby implementowanej aplikacji.
 Omówiono schemat związków-encji oraz jego transformację do schematu relacyjnego.
 W
\begin_inset space ~
\end_inset

rozdziale
\begin_inset space ~
\end_inset

6.
 przybliżono sposób implementacji aplikacji.
 Omówiono w nim implementację logiki serwera, a w szczególności bazy danych.
 Przedstawiono konstrukcję 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
interfejsu programistycznego aplikacji
\end_layout

\end_inset

 --- 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
API
\end_layout

\end_inset

 (ang.
 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Application Programming Interface
\end_layout

\end_inset

) który umożliwia komunikację serwera z aplikacją internetową i mobilną.
 Opisany został także zaimplementowany system autoryzacji oparty na standardzie
 OAuth2.
 Przyjrzano się sposobowi testowania API.
 Przedstawiono sposób implementacji aplikacji internetowej oraz mobilnej
 dla urządzeń pracujących pod kontrolą systemu Android.
 Rozdział
\begin_inset space ~
\end_inset

7.
 stanowi podsumowanie pracy.
\end_layout

\begin_layout Section
Podział pracy
\end_layout

\begin_layout Chapter
Przegląd aplikacji o podobnej tematyce
\end_layout

\begin_layout Chapter
Przegląd dostępnych technologii i platform programistycznych
\end_layout

\begin_layout Standard
Przegląd dostępnych technologii i platform programistycznych pozwala zminimalizo
wać konieczność wprowadzenia kosztownych zmian w przyszłości.
 Aby był on skuteczny należy zdefiniować wspólne własności, które są istotne
 dla poszczególnych składowych całej aplikacji czyli: bazy danych, logiki
 serwera, aplikacji internetowej oraz aplikacji mobilnej.
 Tymi własnościami są:
\end_layout

\begin_layout Itemize
Z punktu widzenia programisty:
\end_layout

\begin_deeper
\begin_layout Itemize
paradygmat programowania
\end_layout

\begin_layout Itemize
ilość dostępnych bibliotek programistycznych
\end_layout

\end_deeper
\begin_layout Itemize
Z punktu widzenia programisty oraz użytkownika:
\end_layout

\begin_deeper
\begin_layout Itemize
wydajność
\end_layout

\begin_layout Itemize
integracja z innymi technologiami
\end_layout

\end_deeper
\begin_layout Itemize
Z punktu widzenia wartości biznesowej:
\end_layout

\begin_deeper
\begin_layout Itemize
czas wytworzenia oprogramowania
\end_layout

\end_deeper
\begin_layout Standard
Powyższe własności są bardzo istotne dlatego też stanowią
\begin_inset space \space{}
\end_inset

główny odnośnik w porównaniu platform.
\end_layout

\begin_layout Section
Baza danych
\end_layout

\begin_layout Section
Logika serwera
\end_layout

\begin_layout Standard
W przeglądzie platform implementujących logikę serwera wzięto pod uwagę
 technologie oparte na językach: Ruby, Elixir, PHP oraz Javascript.
 Wybór tych technologii został podyktowany przez trendy pojawiające się
 na przestrzeni ostatnich lat oraz w celu ukazania różnorodności implementacji.
\end_layout

\begin_layout Subsection
Ruby
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Platforma Ruby on Rails
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Platforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Ruby on Rails v4.2.5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rok powstania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2004
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
paradygmat programowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
obiektowy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ilość dostępnych bibliotek programistycznych
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
> 100 000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wydajność
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
przeciętna
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integracja z innymi technologiami
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bardzo duża
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
czas wytworzenia oprogramowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
krótki
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Platforma Ruby on Rails oparta jest na wzorcu projektowym MVC
\begin_inset Foot
status open

\begin_layout Plain Layout
MVC (pol.
 Model-Widok-Kontroler) - wzorzec architektoniczny który zakłada istnienie
 trzech połączonych ze sobą składowych: modelu, widoku oraz kontrolera.
\end_layout

\end_inset

.
 Jej głównymi zaletami są: dobra dokumentacja, duża ilość bibliotek programistyc
znych oraz niski koszt i krótki czas wytworzenia oprogramowania.
 Główną ideą jest tutaj podążanie za konwencjami dzięki którym programista
 nie musi zwracać
\begin_inset space \space{}
\end_inset

uwagi na konfigurację.
 Umożliwia to znacznie szybszy proces tworzenia aplikacji co jest szczególnie
 istotne dla przedsiębiorstw poszukujących modelu biznesowego oraz nastawionych
 na dynamiczny rozwój.
 Warto również zwrócić uwagę na przeciętną wydajność platformy.
 Powodem tego jest wydajność języka Ruby.
 Jest to język interpretowany, nastawiony na wysoką produktywność a tym
 samym prostą implementację.
 Niestety wszystkie te zalety wiążą się w tym przypadku z wyższym czasem
 przetwarzania.
\end_layout

\begin_layout Subsection
Elixir
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Platforma Phoenix
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Platforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Phoenix v1.1.0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rok powstania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2014
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
paradygmat programowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
funkcyjny
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ilość dostępnych bibliotek programistycznych
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
> 1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wydajność
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wysoka
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integracja z innymi technologiami
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
przeciętna
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
czas wytworzenia oprogramowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
średni
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Platforma Phoenix również oparta jest na wzorcu MVC.
 Reprezentuje ona całkiem inny paradygmat programowania - funkcyjny, który
 kładzie duży nacisk na rekurencję oraz funkcje wyższego rzędu
\begin_inset Foot
status open

\begin_layout Plain Layout
Funkcje wyższego rzędu - funkcje przyjmujące jako parametr lub zwracające
 inne funkcje.
\end_layout

\end_inset

.
 Została zbudowana na bazie języka Elixir uruchamianego na wirtualnej maszynie
 Erlanga.
 Wysoka wydajność tego języka wiąże się między innymi ze współbieżnością
 którą można zaimplementować
\begin_inset space \space{}
\end_inset

małym kosztem.
 Niestety jest to stosunkowo młoda platforma co oznacza niskie wsparcie
 programistyczne oraz małą społeczność.
 
\end_layout

\begin_layout Subsection
PHP
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Platforma Laravel
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Platforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Laravel v5.1.11
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rok powstania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2011
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
paradygmat programowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
obiektowy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ilość dostępnych bibliotek programistycznych
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
> 1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wydajność
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
przeciętna
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integracja z innymi technologiami
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wysoka
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
czas wytworzenia oprogramowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
krótki
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Platforma Laravel jest jednym z najpopularniejszych platform opartych na
 języku PHP.
 Jej struktura nieco przypomina Ruby on Rails - również używa wzorca MVC
 oraz preferowana jest konwencja nad konfiguracją.
 Wydajność aplikacji stworzonej za pomocą standardowego generatora jest
 przeciętna.
 Wiążę się to między innymi z dużą ilością zależności od innych bibliotek.
 Niewątpliwie zaletą jest tutaj zastosowany język PHP który na przestrzeni
 wielu lat został znacznie przyspieszony.
 Istnieje również duża społeczność związana z tą technologią jak i samym
 językiem PHP, który został opracowany w roku 1995.
\end_layout

\begin_layout Subsection
JavaScript
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Platforma Meteor
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Platforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Meteor v1.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rok powstania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2012
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
paradygmat programowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
obiektowy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ilość dostępnych bibliotek programistycznych
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
> 1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wydajność
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wysoka
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integracja z innymi technologiami
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
średnia
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
czas wytworzenia oprogramowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
krótki
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Platforma Meteor reprezentuje całkowicie inne podejście.
 Jest oparta na środowisku programistycznym Node.js które to z kolei zbudowane
 zostało na bazie języka JavaScript.
 Główną zaletą tej platformy jest synchronizacja danych czasu rzeczywistego
 między klientem a serwerem.
 Oznacza to, że zmiany wprowadzone na jednym kliencie zostaną zaobserwowane
 na wszystkich powiązanych klientach.
 Ponadto jest to platforma skalowalna.
 Wadą jest natomiast stosunkowo mała liczba dostępnych bibliotek.
 Pomimo iż aplikację można napisać w bardzo krótkim czasie to wprowadzenie
 brakującej lub niekonwencjonalnej funkcjonalności skutkuje dużym wkładem
 pracy.
\end_layout

\begin_layout Section
Aplikacja internetowa
\end_layout

\begin_layout Standard
Wśród dostępnych platform wspierających implementację aplikacji internetowych
 zdecydowanie dominują rozwiązania oparte na SPA
\begin_inset Foot
status open

\begin_layout Plain Layout
SPA (Single-page application) - aplikacja internetowa, która mieści się
 na jednej stronie.
\end_layout

\end_inset

.
 Obecne technologie używają języka JavaScript wraz z HTML oraz CSS.
 Tego typu rozwiązań jest bardzo dużo dlatego wybór został podyktowany przez
 trendy ostatnich lat oraz popularność poszczególnych platform.
\end_layout

\begin_layout Subsection
Backbone
\end_layout

\begin_layout Standard
\align left
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Platforma Backbone
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Platforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Backbone v1.2.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rok powstania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2010
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
paradygmat programowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
obiektowy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ilość dostępnych bibliotek programistycznych
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
> 100
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wydajność
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wysoka
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integracja z innymi technologiami
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
średnia
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
czas wytworzenia oprogramowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
krótki
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Platforma Backbone skierowana jest dla programistów poszukujących biblioteki
 o małym rozmiarze z dużą funkcjonalnością.
 W porównaniu z innymi platformami posiada małą ilość powiązanych bibliotek
 programistycznych jednak w większości rozwiązań są one wystarczające.
 Posiada również konwencje, które mogą przyspieszyć proces wytwarzania oprogramo
wania.
 Wadą jest konieczność nauczenia się umiejętności połączenia wszystkich
 modułów w taki sposób aby ze sobą współpracowały.
 Jest to zatem solidna a zarazem lekka platforma, która ułatwia organizację
 kodu JavaScript oraz nie ogranicza programisty przez narzucone schematy.
\end_layout

\begin_layout Subsection
Angular
\end_layout

\begin_layout Standard
\align left
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Platforma Angular
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Platforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Angular v1.4.8
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rok powstania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2009
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
paradygmat programowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
obiektowy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ilość dostępnych bibliotek programistycznych
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
> 1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wydajność
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wysoka
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integracja z innymi technologiami
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bardzo duża
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
czas wytworzenia oprogramowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
krótki
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Platforma Angular wspierana jest przez firmę Google co w znacznym stopniu
 zadecydowało o jej popularności wśród programistów.
 Powstała w 2009 roku czego efektem jest duża liczba dostępnych bibliotek,
 które pozwalają na łatwą integrację z innymi technologiami.
 Jest zarazem wydajna jak i stosunkowo nie wielka.
 Programiści pracują nad nową wersją tej platformy, która nie będzie wspierała
 wersji obecnej.
 Można zatem powiedzieć, że w tej chwili Angular jest w niekorzystnej fazie
 rozwojowej co jest niewątpliwie bardzo ważnym aspektem przy wyborze platformy
 dla nowego projektu.
 
\end_layout

\begin_layout Subsection
Ember
\end_layout

\begin_layout Standard
\align left
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Platforma Ember
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Platforma
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Ember v1.3.18
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
rok powstania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2011
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
paradygmat programowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
obiektowy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ilość dostępnych bibliotek programistycznych
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
> 1000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wydajność
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
wysoka
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integracja z innymi technologiami
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
bardzo duża
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
czas wytworzenia oprogramowania
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
krótki
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ember to platforma która w swej idei przypomina Ruby on Rails.
 Posiada wiele konwencji które pozwalają na znaczne przyspieszenie pracy
 jednak przez to narzucają również pewne schematy.
 Posiada obszerne wsparcie bibliotek programistycznych które dla nowszych
 wersji platformy nie tracą kompatybilności wstecz.Wadą jest stosunkowo duży
 rozmiar samej platformy oraz minimalnie gorsza wydajność w porównanie z
 konkurencyjnymi rozwiązaniami.
 Pomimo iż Ember rozwijany jest jako wolne oprogramowanie bez ingerencji
 dużych firm to można powiedzieć, że posiada społeczność niemal tak dużą
 jak w przypadku platformy Angular.
\end_layout

\begin_layout Section
Aplikacja mobilna
\end_layout

\begin_layout Section
Podsumowanie
\end_layout

\begin_layout Chapter
Zastosowane narzędzia inżynierii oprogramowania wspomagające proces tworzenia
 aplikacji
\end_layout

\begin_layout Section
System kontroli wersji
\end_layout

\begin_layout Standard
Podstawowe operacje na plikach takie jak kopiowanie i wklejanie są wystarczające
 gdy oprogramowanie powstaje przez jednego programistę.
 Problem pojawia się w przypadku pracy w grupie gdy wiele osób modyfikuje
 ten sam plik powodując nadpisanie poprzedniej zmiany.
 Z tego powodu powstał system kontroli wersji będący zaawansowanym narzędziem
 umożliwiającym synchronizację zmian dokonanych na plikach poprzez ich monitorow
anie oraz oznaczanie tych modyfikacji.
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 Przechowywanie historii plików umożliwia powrót do wersji wcześniejszych
 w dowolnym momencie co zmniejsza ryzyko wykonywania zmian oraz wprowadza
 dobrą praktykę tworzenia oprogramowania według kolejnych iteracji.
\end_layout

\begin_layout Standard
Obecnie istnieje wiele wolnodostępnych jak i własnościowych dystrybucji
 systemu kontroli wersji.
 Ze względu na ich architekturę dzielą się na:
\end_layout

\begin_layout Itemize
lokalne:
\end_layout

\begin_deeper
\begin_layout Itemize
zmiany przechowywane są tylko lokalnie
\end_layout

\end_deeper
\begin_layout Itemize
scentralizowane:
\end_layout

\begin_deeper
\begin_layout Itemize
zmiany przechowywane są w centralnym repozytorium 
\end_layout

\begin_layout Itemize
praca wyłącznie on-line
\end_layout

\end_deeper
\begin_layout Itemize
rozproszone:
\end_layout

\begin_deeper
\begin_layout Itemize
zmiany przechowywane są lokalnie
\end_layout

\begin_layout Itemize
możliwa jest synchronizacja zmian z serwerem zdalnym
\end_layout

\begin_layout Itemize
praca on-line lub off-line 
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
Obecnie najczęściej używa się repozytoriów scentralizowanych oraz rozproszonych
 wśród których na szczególną uwagę zasługują dystrybucje Git oraz Svn (z
 ang.
 Subversion).
 Wybór systemu kontroli wersji został podyktowany przez następujące czynniki
\end_layout

\begin_layout Itemize
ilość programistów w zespole
\end_layout

\begin_layout Itemize
popularność systemu
\end_layout

\begin_layout Itemize
możliwość integracji z innymi narzędziami
\end_layout

\begin_layout Standard
Z tego względu został wybrany system Git wraz z serwisem Github.
\end_layout

\begin_layout Paragraph
System kontroli wersji Git
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement !h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename loga/git.svg
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Logo systemu kontroli wersji Git
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Git w powstał 2005 roku jako darmowe narzędzie służące do zarządzania kodem
 Linuksa i od tej pory jego popularność rośnie w szybkim tempie.
 Jest to rozproszony rozproszony system kontroli wersji oferujący zaawansowane
 operacje przez co dla początkujących użytkowników może wydawać się trudnym
 narzędziem.
 Posiada dobrze wykonaną dokumentację oraz dużą społeczność programistów
 pracujących nad jego rozwojem.
 Do głównych zalet Gita można zaliczyć dobrą wydajność, kontrolę spójności
 danych oraz lokalność wprowadzanych zmian.
 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

 Warto również dodać, że istnieje wiele serwerów umożliwiających przechowywanie
 repozytoriów opartych na systemie Git.
 Najbardziej popularnym z nich jest serwis Github oferujący darmowe repozytoria
 przechowujące oprogramowanie na zasadzie wolnego oprogramowania oraz płatne,
 które przechowują prywatny kod.
 Jego popularność może być efektem dużego nacisku na wytwarzanie oprogramowania
 opartego na darmowej licencji.
\end_layout

\begin_layout Paragraph
Serwis Github
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename screenshoty/mateby_repo.png
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Widok repozytorium logiki serwera w serwisie Github
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Serwis Github powstał w 2008 roku i jest obecnie jednym z największych serwisów
 obsługujących system Git.
 Do tej pory przy jego pomocy zostało stworzonych ponad 10 milionów repozytoriów.
 W znacznym stopniu ułatwia pracę zespołową udostępniając taką funkcjonalność
 jak
\end_layout

\begin_layout Itemize
przeprowadzenie recenzji kodu
\end_layout

\begin_layout Itemize
tworzenie dokumentacji
\end_layout

\begin_layout Itemize
przeglądanie statystyk
\end_layout

\begin_layout Itemize
tworzenie nowych tematycznych wątków
\end_layout

\begin_layout Standard
Jego ogromną zaletą jest również prosta integracja z wieloma serwisami odpowiedz
ialnymi za pozostałe etapy tworzenia oprogramowania.
\end_layout

\begin_layout Section
Zarządzanie projektem
\end_layout

\begin_layout Section
System ciągłej integracji
\end_layout

\begin_layout Section
Komunikator
\end_layout

\begin_layout Section
Serwer przedprodukcyjny
\end_layout

\begin_layout Standard
Jeśli zmiany wrzucone na zdalne repozytorium przejdą wszystkie etapy sprawdzania
 poprawności w systemie ciągłej integracji trafią na serwer przedprodukcyjny,
 który pełni bardzo ważną rolę na etapie testowania wdrażanej funkcjonalności.
 Aby przeprowadzone testy były skuteczne należy użyć tej samej konfiguracji
 jaka znajduje się na serwerze produkcyjnym.
 Pozwala to na wykluczenie możliwych problemów wynikających z różnic w obrębie
 wersji zależnych bibliotek lub aplikacji.
 Oznacza to zatem, że serwer ten powinien być lustrzanym odbiciem serwera
 produkcyjnego, z wyłączeniem zawartości bazy danych.
 Ze względu na fakt, że aplikacja internetowa oddzielona jest od logiki
 serwera użyte zostały dwa serwery oparte na platformie Heroku.
\end_layout

\begin_layout Paragraph
Platfroma Heroku
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement !h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename loga/heroku.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Logo platformy Heroku
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Platforma Heroku istnieje od 2007 roku.
 Początkowo udostępniała jedynie język Ruby lecz w chwili obecnej posiada
 wsparcie dla kilku najbardziej znanych języków programowania.
 Dużą zaletą tej platformy jest to, że została stworzona w modelu chmury
 obliczeniowej - Platform as a Service (z ang.
 platforma jako usługa).
 Oznacza to, że programista otrzymuje w pełni przygotowany system operacyjny
 wraz z dostosowanym oprogramowaniem 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

.
 W pewnym sensie ogranicza to możliwość znacznej ingerencji w konfiguracje
 serwera ale pozwala na jego uruchomienie w znacznie krótszym czasie.
 Równie istotną zaletą jest darmowy plan w najsłabszej konfiguracji przez
 co platforma ta zyskała duża popularność w środowisku wolnego oprogramowania.
 Głównie z tej przyczyny użyto platformę Heroku w celu stworzenia serwera
 przedprodukcyjnego.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement !h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename loga/heroku.png
	scale 40

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Platforma Heroku
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Projekt aplikacji
\end_layout

\begin_layout Standard
Projekt aplikacji jest jednym z najważniejszych etapów procesu wytwarzania
 oprogramowania.
 Odpowiednie określenie założeń co do funkcjonalności i wyglądu aplikacji
 znacznie ułatwia dalsze prace.
 W
\begin_inset space ~
\end_inset

przypadku opisywanego systemu na etap projektu aplikacji składały się 3
 główne zadania:
\end_layout

\begin_layout Itemize
określenie wymagań funkcjonalnych, które musi spełniać tworzony system
\end_layout

\begin_layout Itemize
stworzenie prototypów interfejsu aplikacji internetowej i mobilnej
\end_layout

\begin_layout Itemize
zaprojektowanie bazy danych w modelu związków encji i przetransformowanie
 powstałego schematu do modelu relacyjnego
\end_layout

\begin_layout Section
Wymagania funkcjonalne
\end_layout

\begin_layout Standard
Kluczową cechą każdej aplikacji jest jej funkcjonalność.
 Powinna być ona dobrze sprecyzowana tak, by nie była ani zbyt szeroka,
 ani nie ograniczała możliwości potencjalnego użytkownika.
 Opis funkcjonalności, którą ma realizować system, nazywamy 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
wymaganiami funkcjonalnymi
\end_layout

\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "key-4"

\end_inset

.
 
\end_layout

\begin_layout Paragraph
Wstęp
\end_layout

\begin_layout Section
Projekt interfejsu aplikacji internetowej i mobilnej
\end_layout

\begin_layout Standard
Oprócz funkcjonalności jednym z najważniejszych aspektów praktycznie każdej
 aplikacji jest jej wygląd.
 Powinien być on przede wszystkim prosty i intuicyjny dla użytkownika.
 Te dwie cechy zostały w szczególności uwzględnione podczas projektowania
 interfejsu zarówno aplikacji internetowej, jak i mobilnej.
\end_layout

\begin_layout Subsection
Aplikacja internetowa
\end_layout

\begin_layout Standard
Poniżej znajdują się prototypy 4 głównych ekranów aplikacji internetowej.
\end_layout

\begin_layout Paragraph
Ekran główny/widok kategorii
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prototypy/main_screen_logged_in.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Prototyp ekranu głównego aplikacji
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ekran główny jest pierwszym jaki można zobaczyć po wejściu na stronę aplikacji.
 Znajdują się na nim kafelki ze zdjęciem oraz nazwą danej kategorii (1).
 Po kliknięciu na daną kategorię pojawia się ekran wyboru podkategorii,
 którego konstrukcja jest identyczna jak widok kategorii.
 W
\begin_inset space ~
\end_inset

górnej części ekranu można zobaczyć pasek nawigacyjny, który pojawia się
 na każdym ekranie aplikacji.
 W
\begin_inset space ~
\end_inset

jego lewej części znajduje się logo aplikacji (2), które jest także odnośnikiem
 do strony głównej.
 Po prawej, jeżeli użytkownik jest zalogowany, znajduje się kolejno odnośnik
 do formularza pozwalającego na stworzenie nowego wydarzenia (3), ikona
 powiadomień o otrzymaniu nowego zaproszenia na wydarzenie (4) oraz zdjęcie
 użytkownika (5).
 Po kliknięciu na zdjęcie pojawia się menu (6).
 Jeżeli użytkownik nie jest zalogowany, to po prawej stronie paska nawigacji
 zobaczy odnośnik do formularza logowania oraz rejestracji.
\end_layout

\begin_layout Paragraph
Widok wydarzeń
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prototypy/events_view.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Prototyp widoku wydarzeń
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Użytkownik zostaje przekierowany do widoku wydarzeń po wybraniu kategorii
 i określeniu (lub pominięciu) podkategorii.
 Ekran ten składa się z kafelków przedstawiających zdjęcie danego wydarzenia
 (1) wraz z informacjami podstawowymi (2) takimi jak nazwa, miejsce i czas
 organizacji czy koszt biletu wstępu.
 Po kliknięciu na jedną z miniatur, użytkownik zostaje przekierowany na
 stronę widoku pojedynczego wydarzenia (jeżeli wcześniej dokonał autoryzacji
 konta, w przeciwnym wypadku wyświetlony zostaje ekran logowania).
\end_layout

\begin_layout Paragraph
Widok pojedynczego wydarzenia
\end_layout

\begin_layout Standard
Widok pojedynczego wydarzenia jest dostępny tylko dla zalogowanych użytkowników.
 Ekran ten został podzielony na 5 zakładek.
 Poniżej znajduje się opis zawartości każdej z nich.
\end_layout

\begin_layout Subparagraph
Zakładka 
\begin_inset Quotes pld
\end_inset

Informacje
\begin_inset Quotes prd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prototypy/event_informations_tab.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Prototyp widoku pojedynczego wydarzenia (zakładka 
\begin_inset Quotes pld
\end_inset

Informacje
\begin_inset Quotes prd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na
\begin_inset space ~
\end_inset

tej zakładce można znaleźć szczegółowe dane na temat danego wydarzenia.
 Po lewej znajduje się zdjęcie (1) oraz dane podstawowe (2).
 Po prawej można znaleźć przycisk pozwalający na dołączenie do grona uczestników
 (3; dostępny dla wszystkich w przypadku wydarzeń publicznych lub tylko
 dla użytkowników posiadających zaproszenie w przypadku wydarzeń prywatnych).
 Znajduje się tu także nazwa wydarzenia (4) wraz ze szczegółowym jego opisem
 (5) oraz znacznikami (6).
 Po kliknięciu na znacznik, następuje przekierowany do strony, w której
 można przeglądać wydarzenia z nim skojarzone (ekran ten ma identyczny układ
 jak widok wydarzeń).
\end_layout

\begin_layout Subparagraph
Zakładka 
\begin_inset Quotes pld
\end_inset

Uczestnicy
\begin_inset Quotes prd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prototypy/event_participants_tab.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Prototyp widoku pojedynczego wydarzenia (zakładka 
\begin_inset Quotes pld
\end_inset

Uczestnicy
\begin_inset Quotes prd
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na
\begin_inset space ~
\end_inset

tej zakładce znajduje się lista użytkowników uczestniczących w wydarzeniu
 (1).
 Istnieje także możliwość wysłania zaproszenia do osoby, która nie jest
 jeszcze uczestnikiem (2 --- pole tekstowe służące do wyszukania zapraszanego
 użytkownika; 3 --- przycisk potwierdzający wysłanie zaproszenia; opcja
 ta jest dostępna dla twórcy wydarzenia lub dla każdego uczestnika, jeżeli
 organizator zaznaczył odpowiednią opcję w formularzu tworzenia wydarzenia).
\end_layout

\begin_layout Subparagraph
Zakładka 
\begin_inset Quotes pld
\end_inset

Lokalizacja
\begin_inset Quotes prd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prototypy/event_localization_tab.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Prototyp widoku pojedynczego wydarzenia (zakładka 
\begin_inset Quotes pld
\end_inset

Lokalizacja
\begin_inset Quotes prd
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na
\begin_inset space ~
\end_inset

tej zakładce można znaleźć mapkę okolicy (1) wraz ze znacznikiem (2) wskazującym
 miejsce organizacji wydarzenia.
\end_layout

\begin_layout Subparagraph
Zakładka 
\begin_inset Quotes pld
\end_inset

Dyskusja
\begin_inset Quotes prd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prototypy/event_posts_tab.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Prototyp widoku pojedynczego wydarzenia (zakładka 
\begin_inset Quotes pld
\end_inset

Dyskusja
\begin_inset Quotes prd
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na
\begin_inset space ~
\end_inset

tej zakładce znajduje się dyskusja na temat danego wydarzenia toczona przez
 użytkowników.
 W górnej części ekranu można znaleźć formularz pozwalający na dodanie nowej
 wiadomości (1 --- pole tekstowe służące do wprowadzenia tekstu wiadomości;
 2 --- przycisk potwierdzający stworzenie wiadomości).
 W dolnej części ekranu można prześledzić historię dyskusji (3).
 Istnieje także możliwość edycji (4) lub usunięcia (5) już dodanej wiadomości
 (tylko w przypadku wiadomości swojego autorstwa).
\end_layout

\begin_layout Subparagraph
Zakładka 
\begin_inset Quotes pld
\end_inset

Organizator
\begin_inset Quotes prd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prototypy/event_organizer_tab.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Prototyp widoku pojedynczego wydarzenia (zakładka 
\begin_inset Quotes pld
\end_inset

Organizator
\begin_inset Quotes prd
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Na tej zakładce umieszczone zostały informacje na temat organizatora wydarzenia.
 Po lewej znajduje się zdjęcie użytkownika (1), po prawej zaś można znaleźć
 imię i nazwisko lub nazwę organizatora (2) oraz dane na jego temat (3).
\end_layout

\begin_layout Paragraph
Widok profilu użytkownika/oddziału instytucji
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename prototypy/user_view.png
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Prototyp widoku profilu użytkownika
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Widok profilu użytkownika lub oddziału instytucji jest dostępny tylko po
 uprzedniej autoryzacji.
 Poza informacjami zawartymi na karcie 
\begin_inset Quotes pld
\end_inset

Organizator
\begin_inset Quotes prd
\end_inset

 widoku pojedynczego wydarzenia, na tym ekranie można znaleźć listę trzech
 ostatnich wydarzeń zorganizowanych przez tego użytkownika (1).
\end_layout

\begin_layout Subsection
Aplikacja mobilna
\end_layout

\begin_layout Section
Projekt bazy danych 
\end_layout

\begin_layout Subsection
Model związków encji
\end_layout

\begin_layout Subsection
Model relacyjny
\end_layout

\begin_layout Chapter
Implementacja
\end_layout

\begin_layout Section
Logika serwera
\end_layout

\begin_layout Subsection
Implementacja bazy 
\end_layout

\begin_layout Subsection
Implementacja interfejsu programistycznego
\end_layout

\begin_layout Subsection
System autoryzacji
\end_layout

\begin_layout Subsection
Testy
\end_layout

\begin_layout Section
Aplikacja internetowa
\end_layout

\begin_layout Section
Aplikacja mobilna
\end_layout

\begin_layout Section
Podsumowanie
\end_layout

\begin_layout Chapter
Podsumowanie
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

Gajda W., 
\begin_inset Flex Emph
status open

\begin_layout Plain Layout
Git.
 Rozproszony system kontroli wersji
\end_layout

\end_inset

, Helion, 2013, s.
 13 --- 14
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

System kontroli wersji.
 W: Wikipedia.
 Wolna encyklopedia [on-line] [dostęp 4 stycznia 2016].
 Dostępny w Internecie: https://pl.wikipedia.org/wiki/System_kontroli_wersji
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-3"

\end_inset

Subversion.
 W: Wikipedia.
 Wolna encyklopedia [on-line] [dostęp 4 stycznia 2016].
 Dostępny w Internecie: https://pl.wikipedia.org/wiki/Subversion
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

Wymaganie (inżynieria).
 W: Wikipedia.
 Wolna encyklopedia [on-line] [dostęp 4 stycznia 2016].
 Dostępny w Internecie: https://pl.wikipedia.org/wiki/Wymaganie_%28in%C5%BCynieria
%29
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-4"

\end_inset

Platform as a Service.
 W: Wikipedia.
 Wolna encyklopedia [on-line] [dostęp 4 stycznia 2016].
 Dostępny w Internecie: https://pl.wikipedia.org/wiki/Platform_as_a_Service
\end_layout

\begin_layout Chapter
Podsumowanie
\end_layout

\end_body
\end_document
